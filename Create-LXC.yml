---
- name: Create new LXC container in Proxmox
  hosts: localhost
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3

    api_host:         "192.168.1.150"
    api_user:         "root@pam"
    api_password:     "c0ff33"

    proxmox_node:     "dragon"
    container_hostname: "ansible"
    container_password: "c0ff33"

    ostemplate:       "local:vztmpl/debian-12-standard_12.7-1_amd64.tar.zst"

    # storage must support LXC (e.g. from `pvesm status`)
    storage:          "local-lvm"
    disk:             8        # GB as a number

    memory:           512      # MB
    cpus:             1
    cpuunits:         1024
    nameserver:       "192.168.1.254"
    vmid:             160

  tasks:
    - name: Build candidate IPs (.156â€“.165)
      set_fact:
        candidate_ips: "{{ ('192.168.1.0/24' | ipaddr('network'))[156:166] }}"

    - name: Ping each candidate to find a free IP
      ansible.builtin.command: ping -c1 -W1 {{ item }}
      register: ping_results
      ignore_errors: true
      loop: "{{ candidate_ips }}"
      loop_control:
        label: "{{ item }}"

    - name: Pick the first non-responding IP
      set_fact:
        free_ip: "{{ item.item }}"
      when: item.rc != 0
      loop: "{{ ping_results.results }}"
      loop_control:
        label: "{{ item.item }}"
      run_once: true

    - name: Debug chosen free_ip
      ansible.builtin.debug:
        var: free_ip

    - name: Create LXC Container
      community.general.proxmox:
        api_host:       "{{ api_host }}"
        api_user:       "{{ api_user }}"
        api_password:   "{{ api_password }}"
        node:           "{{ proxmox_node }}"
        vmid:           "{{ vmid }}"
        hostname:       "{{ container_hostname }}"
        ostemplate:     "{{ ostemplate }}"
        storage:        "{{ storage }}"
        disk:           "{{ disk }}"
        memory:         "{{ memory }}"
        cpus:           "{{ cpus }}"
        cpuunits:       "{{ cpuunits }}"
        nameserver:     "{{ nameserver }}"
        password:       "{{ container_password }}"
        netif:
          net0: "name=eth0,bridge=vmbr0,ip={{ free_ip }}/24,gw={{ nameserver }},ip6=dhcp"
        unprivileged:   true
        state:          present
        validate_certs: false
