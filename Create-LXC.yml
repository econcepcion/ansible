---
- name: Create new LXC container in Proxmox
  hosts: localhost
  gather_facts: false
  vars:
    # Proxmox API credentials
    api_host:       "192.168.1.150"
    api_user:       "root@pam"
    api_password:   "c0ff33"

    # Container settings
    proxmox_node:       "dragon"
    container_hostname: "ansible"
    container_password: "c0ff33"
    ostemplate:         "local:vztmpl/debian-12-standard_12.7-1_amd64.tar.zst"

    # LXC‐enabled storage
    storage:    "local-lvm"
    disk:       20       # GB
    memory:     4096     # MB
    cpus:       2
    cpuunits:   1024
    nameserver: "192.168.1.254"

    # IP selection
    network_prefix: "192.168.1"
    start_octet:    156
    end_octet:      165

  tasks:
    - name: Build candidate IP list
      set_fact:
        candidate_ips: >-
          {{ lookup('ansible.builtin.sequence',
                     'start=' ~ start_octet ~ ' end=' ~ end_octet,
                     wantlist=True)
             | map('regex_replace','^(.*)$', network_prefix ~ '.\\1')
             | list }}

    - name: Ping each candidate to find a free IP
      ansible.builtin.command:
        cmd: "timeout 1 ping -c1 -W1 {{ item }}"
      register: ping_results
      loop: "{{ candidate_ips }}"
      loop_control:
        label: "{{ item }}"
      failed_when: false
      changed_when: false

    - name: Pick the first non-responding IP
      ansible.builtin.set_fact:
        free_ip: "{{ item.item }}"
      loop: "{{ ping_results.results }}"
      when:
        - item.rc != 0
        - free_ip is not defined
      run_once: true

    - name: Debug chosen free_ip
      ansible.builtin.debug:
        var: free_ip

    - name: Set vmid to the last octet of the free IP
      set_fact:
        vmid: "{{ free_ip.split('.')[-1] | int }}"

    - name: Create LXC Container
      community.general.proxmox:
        api_host:       "{{ api_host }}"
        api_user:       "{{ api_user }}"
        api_password:   "{{ api_password }}"
        node:           "{{ proxmox_node }}"
        vmid:           "{{ vmid }}"
        hostname:       "{{ container_hostname }}"
        ostemplate:     "{{ ostemplate }}"
        storage:        "{{ storage }}"
        disk:           "{{ disk }}"
        memory:         "{{ memory }}"
        cpus:           "{{ cpus }}"
        cpuunits:       "{{ cpuunits }}"
        nameserver:     "{{ nameserver }}"
        password:       "{{ container_password }}"
        netif:
          net0: "name=eth0,bridge=vmbr0,ip={{ free_ip }}/24,gw={{ nameserver }},ip6=dhcp"
        unprivileged:   true
        state:          present
        validate_certs: false
      no_log: true

    - name: Start the LXC Container
      community.general.proxmox:
        api_host:       "{{ api_host }}"
        api_user:       "{{ api_user }}"
        api_password:   "{{ api_password }}"
        node:           "{{ proxmox_node }}"
        vmid:           "{{ vmid }}"
        state:          started
      no_log: true

    - name: Wait for the container's SSH to come up
      wait_for:
        host:  "{{ free_ip }}"
        port:  22
        delay: 5
        timeout: 120

    - name: Add the new container to our in-memory inventory
      add_host:
        name: "{{ free_ip }}"
        groups: newcontainers
        ansible_user: root
        ansible_password: "{{ container_password }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        ansible_python_interpreter: /usr/bin/python3

- name: Configure the new container via SSH
  hosts: newcontainers
  gather_facts: true
  remote_user: root
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  tasks:
    - name: Ensure apt cache is up to date
      ansible.builtin.apt:
        update_cache: yes

    - name: Dist-upgrade all packages non-interactively
      ansible.builtin.apt:
        upgrade: dist
        dpkg_options:
          - "--force-confdef"
          - "--force-confold"
        autoremove: yes
